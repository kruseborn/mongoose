#version 450
#extension GL_ARB_shading_language_420pack : enable

layout (set = 0, binding = 0) uniform Ubo {
	uint N;
	float dt;
   float diff;
} ubo;

layout(set = 1, binding = 0) buffer Velocity {
   float x[];
} x;

layout(set = 2, binding = 0) buffer Velocity2 {
   float x[];
} x0;

#define localGroupSize 256
layout (local_size_x = 1) in;

uint IX(uint x, uint y) {
	return x + y * (ubo.N + 2);
}

void main() {
	const uint N = ubo.N;

	const float dt = ubo.dt;
	const uint size = (N + 2) * (N+2);
	float dt0 = dt * N;

	uint index = gl_GlobalInvocationID.x;
	
      uint i = index % (N+2);
      uint j = index / (N+2);
      if(i >= N || j >= N)
         return;

      float a = dt * ubo.diff * N * N;
      for (uint iterations = 0; iterations < 5; iterations++) {
            x.x[IX(i, j)] =
               (x0.x[IX(i, j)] + a * (x.x[IX(i - 1, j)] + x.x[IX(i + 1, j)] + x.x[IX(i, j - 1)] + x.x[IX(i, j + 1)])) / (1 + 4 * a);
      }
}