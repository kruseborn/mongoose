#version 450
#extension GL_ARB_shading_language_420pack : enable

layout(set = 0, binding = 0) uniform Ubo {
  vec2 delta;
  int i;
  int j;
  uint N;
}
ubo;

layout(set = 1, binding = 0) buffer U { float x[]; }
u;

layout(set = 2, binding = 0) buffer V { float x[]; }
v;

layout(set = 3, binding = 0) buffer D { float x[]; }
d;

#define localGroupSize 256
layout(local_size_x = 1) in;

uint IX(uint x, uint y) { return x + y * (ubo.N + 2); }

void main() {
  const vec2 delta = ubo.delta;
  const int i = int(ubo.i);
  const int j = int(ubo.j);
  const uint N = ubo.N;

  for (int y = j - 4; y <= j + 4; y++) {
    for (int x = i - 4; x <= i + 4; x++) {
      u.x[IX(x, y)] += 50.0 * delta.x;
      v.x[IX(x, y)] += 50.0 * (-1.0 * delta.y);
      d.x[IX(x, y)] += 0.5;
    }
  }
}